library(tidyverse)
library(gt)
library(modelsummary)
library(stargazer)
library(ROCR)
library(caret)
library(cvTools)
library(MASS)
suppressWarnings()
library(tidyverse)
library(gt)
library(modelsummary)
library(stargazer)
library(ROCR)
library(caret)
library(cvTools)
library(MASS)
options(warn = -1)
options(message = -1)
flmdw <- read.csv("flmdw-1.csv")
head(flmdw, 20)
library(ggplot2)
ggplot(flmdw, aes(x = factor(onset))) +
geom_bar(fill = c("violet", "purple")) +
labs(title = "Distribution of Civil War Onset",
x = "Civil War Onset",
y = "Count") +
scale_x_discrete(labels = c("No Onset", "Onset")) +
theme_minimal()
library(dplyr)
colnames(flmdw)
flmdw_complete <- flmdw %>%
dplyr::select(onset, gdpenl, lpopl1, lmtnest, Oil, polity2l, relfrac) %>%
na.omit()
model1 <- glm(onset ~ gdpenl + lpopl1 + lmtnest,
data = flmdw_complete, family = binomial)
model2 <- glm(onset ~ gdpenl + lpopl1 + lmtnest,
data = flmdw_complete, family = binomial(link = "probit"))
model3 <- glm(onset ~ gdpenl + lpopl1 + lmtnest + Oil + polity2l + relfrac,
data = flmdw_complete, family = binomial(link = "probit"))
model4 <- glm(onset ~ gdpenl + lpopl1 + lmtnest + Oil + polity2l * relfrac,
data = flmdw_complete, family = binomial(link = "probit"))
summary(model1)
summary(model2)
summary(model3)
summary(model4)
library(broom)
glance(model1)
glance(model2)
glance(model3)
glance(model4)
library(broom)
library(gt)
# Create a tidy dataframe of your model summaries
model_summaries <- bind_rows(
tidy(model1, conf.int = TRUE) %>% mutate(model = "Model 1"),
tidy(model2, conf.int = TRUE) %>% mutate(model = "Model 2"),
tidy(model3, conf.int = TRUE) %>% mutate(model = "Model 3"),
tidy(model4, conf.int = TRUE) %>% mutate(model = "Model 4")
)
# Use gt to create the table
gt_table <- gt(model_summaries) %>%
tab_header(
title = "Results of Logistic and Probit Regression Models"
) %>%
fmt_number(
columns = vars(estimate, std.error, statistic, p.value, conf.low, conf.high),
decimals = 3
) %>%
cols_label(
estimate = "Estimate",
std.error = "Std. Error",
statistic = "z value",
p.value = "P Value",
conf.low = "CI Low",
conf.high = "CI High",
term = "Term"
) %>%
tab_spanner(
label = "Confidence Interval",
columns = vars(conf.low, conf.high)
)
# Print the table
print(gt_table)
pred1 <- prediction(predict(model1, type = "response"), flmdw_complete$onset)
roc1 <- performance(pred1, "tpr", "fpr")
pred2 <- prediction(predict(model2, type = "response"), flmdw_complete$onset)
roc2 <- performance(pred2, "tpr", "fpr")
pred3 <- prediction(predict(model3, type = "response"), flmdw_complete$onset)
roc3 <- performance(pred3, "tpr", "fpr")
pred4 <- prediction(predict(model4, type = "response"), flmdw_complete$onset)
roc4 <- performance(pred4, "tpr", "fpr")
plot(roc1, col = "blue", main = "ROC Curves Comparison", xlim = c(0, 1), ylim = c(0, 1))
plot(roc2, col = "red", add = TRUE)
plot(roc3, col = "green", add = TRUE)
plot(roc4, col = "purple", add = TRUE)
legend("bottomright", legend = c("Model 1", "Model 2", "Model 3", "Model 4"),
col = c("blue", "red", "green", "purple"), lty = 1)
model_restricted <- glm(onset ~ gdpenl + lpopl1 + lmtnest + Oil + relfrac,
data = flmdw_complete, family = binomial(link = "probit"))
lr_test <- anova(model_restricted, model4, test = "Chisq")
print(lr_test)
library(caret)
library(pROC)
set.seed(3407) # 3407 is all you need
flmdw_complete$onset <- factor(flmdw_complete$onset, levels = c(0,1), labels = c("No", "Yes"))
cv_control <- trainControl(method = "cv", number = 10, classProbs = TRUE, summaryFunction = twoClassSummary)
cv_model1 <- train(onset ~ gdpenl + lpopl1 + lmtnest,
data = flmdw_complete, method = "glm", family = binomial(),
trControl = cv_control, metric = "ROC")
cv_model2 <- train(onset ~ gdpenl + lpopl1 + lmtnest + Oil,
data = flmdw_complete, method = "glm", family = binomial(),
trControl = cv_control, metric = "ROC")
cv_model3 <- train(onset ~ gdpenl + lpopl1 + lmtnest + Oil + polity2l + relfrac,
data = flmdw_complete, method = "glm", family = binomial(link = "probit"),
trControl = cv_control, metric = "ROC")
cv_model4 <- train(onset ~ gdpenl + lpopl1 + lmtnest + Oil + polity2l * relfrac,
data = flmdw_complete, method = "glm", family = binomial(link = "probit"),
trControl = cv_control, metric = "ROC")
prob1 <- predict(cv_model1, flmdw_complete, type = "prob")[,"Yes"]
prob2 <- predict(cv_model2, flmdw_complete, type = "prob")[,"Yes"]
prob3 <- predict(cv_model3, flmdw_complete, type = "prob")[,"Yes"]
prob4 <- predict(cv_model4, flmdw_complete, type = "prob")[,"Yes"]
roc1 <- roc(flmdw_complete$onset, prob1)
roc2 <- roc(flmdw_complete$onset, prob2)
roc3 <- roc(flmdw_complete$onset, prob3)
roc4 <- roc(flmdw_complete$onset, prob4)
plot(roc1, col = "blue", main = "10-Fold Cross-Validation ROC")
lines(roc2, col = "red")
lines(roc3, col = "green")
lines(roc4, col = "purple")
legend("bottomright", legend = c("Model 1", "Model 2", "Model 3", "Model 4"),
col = c("blue", "red", "green", "purple"), lty = 1)
auc(roc1)
auc(roc2)
auc(roc3)
auc(roc4)
# Prepare data for predictions
prediction_data <- expand.grid(
polity2l = seq(min(flmdw_complete$polity2l), max(flmdw_complete$polity2l), by = 1),
relfrac = c(0.1, 0.5, 0.9),
gdpenl = mean(flmdw_complete$gdpenl),
lpopl1 = mean(flmdw_complete$lpopl1),
lmtnest = mean(flmdw_complete$lmtnest),
Oil = mean(flmdw_complete$Oil)
)
# Predict probabilities
prediction_data$predicted_prob <- predict(cv_model4, newdata = prediction_data, type = "prob")[, "Yes"]
# Plotting
ggplot(prediction_data, aes(x = polity2l, y = predicted_prob, color = factor(relfrac))) +
geom_line() +
labs(x = "Democracy Index", y = "Probability of Civil War Onset") +
scale_color_brewer(palette = "Set1") +
theme_minimal()
library(tidyverse)
library(gt)
library(modelsummary)
library(stargazer)
library(ROCR)
library(caret)
library(cvTools)
library(MASS)
options(warn = -1)
options(message = -1)
flmdw <- read.csv("flmdw-1.csv")
head(flmdw, 20)
library(ggplot2)
ggplot(flmdw, aes(x = factor(onset))) +
geom_bar(fill = c("violet", "purple")) +
labs(title = "Distribution of Civil War Onset",
x = "Civil War Onset",
y = "Count") +
scale_x_discrete(labels = c("No Onset", "Onset")) +
theme_minimal()
library(dplyr)
colnames(flmdw)
flmdw_complete <- flmdw %>%
dplyr::select(onset, gdpenl, lpopl1, lmtnest, Oil, polity2l, relfrac) %>%
na.omit()
model1 <- glm(onset ~ gdpenl + lpopl1 + lmtnest,
data = flmdw_complete, family = binomial)
model2 <- glm(onset ~ gdpenl + lpopl1 + lmtnest,
data = flmdw_complete, family = binomial(link = "probit"))
model3 <- glm(onset ~ gdpenl + lpopl1 + lmtnest + Oil + polity2l + relfrac,
data = flmdw_complete, family = binomial(link = "probit"))
model4 <- glm(onset ~ gdpenl + lpopl1 + lmtnest + Oil + polity2l * relfrac,
data = flmdw_complete, family = binomial(link = "probit"))
summary(model1)
summary(model2)
summary(model3)
summary(model4)
library(broom)
glance(model1)
glance(model2)
glance(model3)
glance(model4)
library(broom)
library(gt)
model_summaries <- bind_rows(
tidy(model1, conf.int = TRUE) %>% mutate(model = "Model 1"),
tidy(model2, conf.int = TRUE) %>% mutate(model = "Model 2"),
tidy(model3, conf.int = TRUE) %>% mutate(model = "Model 3"),
tidy(model4, conf.int = TRUE) %>% mutate(model = "Model 4")
)
gt_table <- gt(model_summaries) %>%
tab_header(
title = "Results of Logistic and Probit Regression Models"
) %>%
fmt_number(
columns = vars(estimate, std.error, statistic, p.value, conf.low, conf.high),
decimals = 3
) %>%
cols_label(
estimate = "Estimate",
std.error = "Std. Error",
statistic = "z value",
p.value = "P Value",
conf.low = "CI Low",
conf.high = "CI High",
term = "Term"
) %>%
tab_spanner(
label = "Confidence Interval",
columns = vars(conf.low, conf.high)
)
gtsave("gt.png")
library(tidyverse)
library(gt)
library(modelsummary)
library(stargazer)
library(ROCR)
library(caret)
library(cvTools)
library(MASS)
options(warn = -1)
options(message = -1)
flmdw <- read.csv("flmdw-1.csv")
head(flmdw, 20)
library(ggplot2)
ggplot(flmdw, aes(x = factor(onset))) +
geom_bar(fill = c("violet", "purple")) +
labs(title = "Distribution of Civil War Onset",
x = "Civil War Onset",
y = "Count") +
scale_x_discrete(labels = c("No Onset", "Onset")) +
theme_minimal()
library(dplyr)
colnames(flmdw)
flmdw_complete <- flmdw %>%
dplyr::select(onset, gdpenl, lpopl1, lmtnest, Oil, polity2l, relfrac) %>%
na.omit()
model1 <- glm(onset ~ gdpenl + lpopl1 + lmtnest,
data = flmdw_complete, family = binomial)
model2 <- glm(onset ~ gdpenl + lpopl1 + lmtnest,
data = flmdw_complete, family = binomial(link = "probit"))
model3 <- glm(onset ~ gdpenl + lpopl1 + lmtnest + Oil + polity2l + relfrac,
data = flmdw_complete, family = binomial(link = "probit"))
model4 <- glm(onset ~ gdpenl + lpopl1 + lmtnest + Oil + polity2l * relfrac,
data = flmdw_complete, family = binomial(link = "probit"))
summary(model1)
summary(model2)
summary(model3)
summary(model4)
library(broom)
glance(model1)
glance(model2)
glance(model3)
glance(model4)
library(broom)
library(gt)
model_summaries <- bind_rows(
tidy(model1, conf.int = TRUE) %>% mutate(model = "Model 1"),
tidy(model2, conf.int = TRUE) %>% mutate(model = "Model 2"),
tidy(model3, conf.int = TRUE) %>% mutate(model = "Model 3"),
tidy(model4, conf.int = TRUE) %>% mutate(model = "Model 4")
)
gt_table <- gt(model_summaries) %>%
tab_header(
title = "Results of Logistic and Probit Regression Models"
) %>%
fmt_number(
columns = vars(estimate, std.error, statistic, p.value, conf.low, conf.high),
decimals = 3
) %>%
cols_label(
estimate = "Estimate",
std.error = "Std. Error",
statistic = "z value",
p.value = "P Value",
conf.low = "CI Low",
conf.high = "CI High",
term = "Term"
) %>%
tab_spanner(
label = "Confidence Interval",
columns = vars(conf.low, conf.high)
)
gtsave(gt_table)
library(tidyverse)
library(gt)
library(modelsummary)
library(stargazer)
library(ROCR)
library(caret)
library(cvTools)
library(MASS)
options(warn = -1)
options(message = -1)
flmdw <- read.csv("flmdw-1.csv")
head(flmdw, 20)
library(ggplot2)
ggplot(flmdw, aes(x = factor(onset))) +
geom_bar(fill = c("violet", "purple")) +
labs(title = "Distribution of Civil War Onset",
x = "Civil War Onset",
y = "Count") +
scale_x_discrete(labels = c("No Onset", "Onset")) +
theme_minimal()
library(dplyr)
colnames(flmdw)
flmdw_complete <- flmdw %>%
dplyr::select(onset, gdpenl, lpopl1, lmtnest, Oil, polity2l, relfrac) %>%
na.omit()
model1 <- glm(onset ~ gdpenl + lpopl1 + lmtnest,
data = flmdw_complete, family = binomial)
model2 <- glm(onset ~ gdpenl + lpopl1 + lmtnest,
data = flmdw_complete, family = binomial(link = "probit"))
model3 <- glm(onset ~ gdpenl + lpopl1 + lmtnest + Oil + polity2l + relfrac,
data = flmdw_complete, family = binomial(link = "probit"))
model4 <- glm(onset ~ gdpenl + lpopl1 + lmtnest + Oil + polity2l * relfrac,
data = flmdw_complete, family = binomial(link = "probit"))
summary(model1)
summary(model2)
summary(model3)
summary(model4)
library(broom)
glance(model1)
glance(model2)
glance(model3)
glance(model4)
library(broom)
library(gt)
model_summaries <- bind_rows(
tidy(model1, conf.int = TRUE) %>% mutate(model = "Model 1"),
tidy(model2, conf.int = TRUE) %>% mutate(model = "Model 2"),
tidy(model3, conf.int = TRUE) %>% mutate(model = "Model 3"),
tidy(model4, conf.int = TRUE) %>% mutate(model = "Model 4")
)
gt_table <- gt(model_summaries) %>%
tab_header(
title = "Results of Logistic and Probit Regression Models"
) %>%
fmt_number(
columns = vars(estimate, std.error, statistic, p.value, conf.low, conf.high),
decimals = 3
) %>%
cols_label(
estimate = "Estimate",
std.error = "Std. Error",
statistic = "z value",
p.value = "P Value",
conf.low = "CI Low",
conf.high = "CI High",
term = "Term"
) %>%
tab_spanner(
label = "Confidence Interval",
columns = vars(conf.low, conf.high)
)
gtsave(gt_table, filename = "gt_table")
library(tidyverse)
library(gt)
library(modelsummary)
library(stargazer)
library(ROCR)
library(caret)
library(cvTools)
library(MASS)
options(warn = -1)
options(message = -1)
flmdw <- read.csv("flmdw-1.csv")
head(flmdw, 20)
library(ggplot2)
ggplot(flmdw, aes(x = factor(onset))) +
geom_bar(fill = c("violet", "purple")) +
labs(title = "Distribution of Civil War Onset",
x = "Civil War Onset",
y = "Count") +
scale_x_discrete(labels = c("No Onset", "Onset")) +
theme_minimal()
library(dplyr)
colnames(flmdw)
flmdw_complete <- flmdw %>%
dplyr::select(onset, gdpenl, lpopl1, lmtnest, Oil, polity2l, relfrac) %>%
na.omit()
model1 <- glm(onset ~ gdpenl + lpopl1 + lmtnest,
data = flmdw_complete, family = binomial)
model2 <- glm(onset ~ gdpenl + lpopl1 + lmtnest,
data = flmdw_complete, family = binomial(link = "probit"))
model3 <- glm(onset ~ gdpenl + lpopl1 + lmtnest + Oil + polity2l + relfrac,
data = flmdw_complete, family = binomial(link = "probit"))
model4 <- glm(onset ~ gdpenl + lpopl1 + lmtnest + Oil + polity2l * relfrac,
data = flmdw_complete, family = binomial(link = "probit"))
summary(model1)
summary(model2)
summary(model3)
summary(model4)
library(broom)
glance(model1)
glance(model2)
glance(model3)
glance(model4)
library(broom)
library(gt)
model_summaries <- bind_rows(
tidy(model1, conf.int = TRUE) %>% mutate(model = "Model 1"),
tidy(model2, conf.int = TRUE) %>% mutate(model = "Model 2"),
tidy(model3, conf.int = TRUE) %>% mutate(model = "Model 3"),
tidy(model4, conf.int = TRUE) %>% mutate(model = "Model 4")
)
gt_table <- gt(model_summaries) %>%
tab_header(
title = "Results of Logistic and Probit Regression Models"
) %>%
fmt_number(
columns = vars(estimate, std.error, statistic, p.value, conf.low, conf.high),
decimals = 3
) %>%
cols_label(
estimate = "Estimate",
std.error = "Std. Error",
statistic = "z value",
p.value = "P Value",
conf.low = "CI Low",
conf.high = "CI High",
term = "Term"
) %>%
tab_spanner(
label = "Confidence Interval",
columns = vars(conf.low, conf.high)
)
gtsave(gt_table, filename = "gt_table.pdf")
pred1 <- prediction(predict(model1, type = "response"), flmdw_complete$onset)
roc1 <- performance(pred1, "tpr", "fpr")
pred2 <- prediction(predict(model2, type = "response"), flmdw_complete$onset)
roc2 <- performance(pred2, "tpr", "fpr")
pred3 <- prediction(predict(model3, type = "response"), flmdw_complete$onset)
roc3 <- performance(pred3, "tpr", "fpr")
pred4 <- prediction(predict(model4, type = "response"), flmdw_complete$onset)
roc4 <- performance(pred4, "tpr", "fpr")
plot(roc1, col = "blue", main = "ROC Curves Comparison", xlim = c(0, 1), ylim = c(0, 1))
plot(roc2, col = "red", add = TRUE)
plot(roc3, col = "green", add = TRUE)
plot(roc4, col = "purple", add = TRUE)
legend("bottomright", legend = c("Model 1", "Model 2", "Model 3", "Model 4"),
col = c("blue", "red", "green", "purple"), lty = 1)
model_restricted <- glm(onset ~ gdpenl + lpopl1 + lmtnest + Oil + relfrac,
data = flmdw_complete, family = binomial(link = "probit"))
lr_test <- anova(model_restricted, model4, test = "Chisq")
print(lr_test)
library(caret)
library(pROC)
set.seed(3407) # 3407 is all you need
flmdw_complete$onset <- factor(flmdw_complete$onset, levels = c(0,1), labels = c("No", "Yes"))
cv_control <- trainControl(method = "cv", number = 10, classProbs = TRUE, summaryFunction = twoClassSummary)
cv_model1 <- train(onset ~ gdpenl + lpopl1 + lmtnest,
data = flmdw_complete, method = "glm", family = binomial(),
trControl = cv_control, metric = "ROC")
cv_model2 <- train(onset ~ gdpenl + lpopl1 + lmtnest + Oil,
data = flmdw_complete, method = "glm", family = binomial(),
trControl = cv_control, metric = "ROC")
cv_model3 <- train(onset ~ gdpenl + lpopl1 + lmtnest + Oil + polity2l + relfrac,
data = flmdw_complete, method = "glm", family = binomial(link = "probit"),
trControl = cv_control, metric = "ROC")
cv_model4 <- train(onset ~ gdpenl + lpopl1 + lmtnest + Oil + polity2l * relfrac,
data = flmdw_complete, method = "glm", family = binomial(link = "probit"),
trControl = cv_control, metric = "ROC")
prob1 <- predict(cv_model1, flmdw_complete, type = "prob")[,"Yes"]
prob2 <- predict(cv_model2, flmdw_complete, type = "prob")[,"Yes"]
prob3 <- predict(cv_model3, flmdw_complete, type = "prob")[,"Yes"]
prob4 <- predict(cv_model4, flmdw_complete, type = "prob")[,"Yes"]
roc1 <- roc(flmdw_complete$onset, prob1)
roc2 <- roc(flmdw_complete$onset, prob2)
roc3 <- roc(flmdw_complete$onset, prob3)
roc4 <- roc(flmdw_complete$onset, prob4)
plot(roc1, col = "blue", main = "10-Fold Cross-Validation ROC")
lines(roc2, col = "red")
lines(roc3, col = "green")
lines(roc4, col = "purple")
legend("bottomright", legend = c("Model 1", "Model 2", "Model 3", "Model 4"),
col = c("blue", "red", "green", "purple"), lty = 1)
auc(roc1)
auc(roc2)
auc(roc3)
auc(roc4)
# Prepare data for predictions
prediction_data <- expand.grid(
polity2l = seq(min(flmdw_complete$polity2l), max(flmdw_complete$polity2l), by = 1),
relfrac = c(0.1, 0.5, 0.9),
gdpenl = mean(flmdw_complete$gdpenl),
lpopl1 = mean(flmdw_complete$lpopl1),
lmtnest = mean(flmdw_complete$lmtnest),
Oil = mean(flmdw_complete$Oil)
)
# Predict probabilities
prediction_data$predicted_prob <- predict(cv_model4, newdata = prediction_data, type = "prob")[, "Yes"]
# Plotting
ggplot(prediction_data, aes(x = polity2l, y = predicted_prob, color = factor(relfrac))) +
geom_line() +
labs(x = "Democracy Index", y = "Probability of Civil War Onset") +
scale_color_brewer(palette = "Set1") +
theme_minimal()
